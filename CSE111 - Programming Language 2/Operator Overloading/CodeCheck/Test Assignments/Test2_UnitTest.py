import unittest, Lab3_4T8

class TestStudent(unittest.TestCase):
    def test_harry(self):
        harry = Lab3_4T8.Student('Harry Potter', 123)
        harry.dailyEffort(3)
        harry.printDetails()
        print('========================')
        self.assertEqual(harry.name, 'Harry Potter', 'Name is not correct')
        self.assertEqual(harry.id, 123, 'ID is not correct')
        self.assertEqual(harry.dept, 'CSE', 'Department is not correct')
        self.assertEqual(harry.hour, 3, 'Working hour is not correct')
        self.assertEqual(harry.suggestion, 'Suggestion: Keep up the good work!', 'Suggestion is not correct')
    def test_john(self):
        john = Lab3_4T8.Student("John Wick", 456, "BBA")
        john.dailyEffort(2)
        john.printDetails()
        print('========================')
        self.assertEqual(john.name, "John Wick", 'Name is not correct')
        self.assertEqual(john.id, 456, 'ID is not correct')
        self.assertEqual(john.dept, "BBA", 'Department is not correct')
        self.assertEqual(john.hour, 2, 'Working hour is not correct')
        self.assertEqual(john.suggestion, 'Suggestion: Should give more effort!', 'Suggestion is not correct')
    def test_naruto(self):
        naruto = Lab3_4T8.Student("Naruto Uzumaki", 777, "Ninja")
        naruto.dailyEffort(-6)
        naruto.printDetails()
        print('========================')
        self.assertEqual(naruto.name, "Naruto Uzumaki", 'Name is not correct')
        self.assertEqual(naruto.id, 777,'ID is not correct')
        self.assertEqual(naruto.dept, "Ninja", 'Department is not correct')
        self.assertEqual(naruto.hour, -6, 'Working hour is not correct')
        self.assertEqual(naruto.suggestion, 'WAIT A MINUTE! NEGATIVE WORKING HOURS?!', 'Suggestion is not correct')
    def test_ash(self):
        ash = Lab3_4T8.Student("Ash Ketchum", 111, "Pokemon")
        ash.dailyEffort(1)
        ash.printDetails()
        print('========================')
        self.assertEqual(ash.name, "Ash Ketchum")
        self.assertEqual(ash.id, 111)
        self.assertEqual(ash.dept, "Pokemon")
        self.assertEqual(ash.hour, 1)
        self.assertEqual(ash.suggestion, 'Suggestion: Should give more effort!')
    def test_mario(self):
        mario = Lab3_4T8.Student("Mario", 222, "Mario")
        mario.dailyEffort(5)
        mario.printDetails()
        print('========================')
        self.assertEqual(mario.name, "Mario")
        self.assertEqual(mario.id, 222)
        self.assertEqual(mario.dept, "Mario")
        self.assertEqual(mario.hour, 5)
        self.assertEqual(mario.suggestion, 'Suggestion: Excellent! Now motivate others.')
    def test_scooby(self):
        scooby = Lab3_4T8.Student("Sooby Doo", 333)
        scooby.dailyEffort(0)
        scooby.printDetails()
        print('========================')
        self.assertEqual(scooby.name, "Sooby Doo")
        self.assertEqual(scooby.id, 333)
        self.assertEqual(scooby.dept, "CSE")
        self.assertEqual(scooby.hour, 0)
        self.assertEqual(scooby.suggestion, 'No effort today')

# unittest.main(argv=[''], verbosity=2, exit=False)
if __name__ == '__main__':
    unittest.main()
